parameters:
  name: ''
  platform_name: 'linux64'
  mx_buildqual: ''
  py_minor_version: 7
  working_dir: ''
  staging_dir: ''

jobs:
  - job: ${{ parameters.name }}
    displayName: ${{ parameters.name }}
    continueOnError: false
    timeoutInMinutes: 0
    variables:
      PY_VERSION_DEC: ${{ format('3.{0}', parameters.py_minor_version) }}
      PY_VERSION_LAB: ${{ format('py3{0}', parameters.py_minor_version) }}
      ROOT_DIR: '${{ parameters.working_dir }}'
      SOURCE_DIR: '$(ROOT_DIR)/mechanica'
      INSTALL_DIR: '$(ROOT_DIR)/mechanica_install'
      EXEC_PYTHON: '$(INSTALL_DIR)/mx_env/bin/python'
    workspace:
      clean: all
    steps:

      # Setup
      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: Add conda to path
      - script: sudo apt-get install -y libgl1-mesa-dev libegl1-mesa-dev
        displayName: Install dependencies
      - checkout: self
        submodules: recursive
        path: mechanica
        displayName: Get source
      - script: conda config --add channels conda-forge
        displayName: Conda setup

      # Build
      - script: |
          source $(SOURCE_DIR)/package/local/linux/mx_install_vars.sh
          bash $(SOURCE_DIR)/package/local/linux/mx_install_env.sh
          source activate ${MXENV}
          conda install -y python=$(PY_VERSION_DEC)
          export MXBUILDQUAL=${{ parameters.mx_buildqual }}
          bash $(SOURCE_DIR)/package/local/linux/mx_install_all.sh
        displayName: Execute build

      # Test
      - script: |
          source $(INSTALL_DIR)/etc/mx_vars.sh
          source activate ${MXENV}
          $(EXEC_PYTHON) $(SOURCE_DIR)/.azure-pipelines/tests-temp/test.py
        displayName: Run supplementary test

      # Package
      - script: |
          source $(INSTALL_DIR)/etc/mx_vars.sh
          source activate ${MXENV}
          $(EXEC_PYTHON) $(SOURCE_DIR)/.azure-pipelines/env-recipes/mx_rtenv.py -v $(PY_VERSION_DEC) -p ${{ parameters.platform_name }}
        displayName: Generate environment recipe
      - task: CopyFiles@2
        inputs:
          sourceFolder: $(INSTALL_DIR)
          contents: |
            **/*
            !mx_env/**/*
          targetFolder: ${{ parameters.staging_dir }}
        displayName: Stage package
      - task: CopyFiles@2
        inputs:
          sourceFolder: $(SOURCE_DIR)
          contents: |
            .azure-pipelines/env-installers/mx_install_env.sh
            .azure-pipelines/env-recipes/mx_rtenv.yml
          targetFolder: ${{ parameters.staging_dir }}
          flattenFolders: true
        displayName: Stage package helpers
      
      # Publish
      - publish: ${{ parameters.staging_dir }}
        artifact: mechanica-${{ parameters.platform_name }}-$(PY_VERSION_LAB)
        displayName: Publish package
