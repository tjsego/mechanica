name: mechanica_$(Data:yyyyMMdd)$(Rev:.r)

trigger:
  - master

variables:
  py_minor_version: 7
  mx_version: '0.30.0'
  mx_buildnum: 0
  mx_buildqual: 'release'

stages:

  # Windows build: local

  - stage: MechanicaBuildWindowsLocal
    displayName: Local build for Windows
    pool:
      vmImage: 'windows-2019'
    dependsOn: []
    - template: .azure-pipelines/job-templates/job-build-test-package-win-local.yml
      parameters:
        name: 'MechanicaBuildWindowsLocal'
        platform_name: 'win64'
        mx_buildqual: $(mx_buildqual)
        py_minor_version: $(py_minor_version)
        working_dir: $(System.DefaultWorkingDirectory)
        staging_dir: $(Build.ArtifactStagingDirectory)

  # Windows build: conda

  - stage: MechanicaBuildWindowsConda
    displayName: Conda build for Windows
    pool:
      vmImage: 'windows-2019'
    dependsOn: []
    - template: .azure-pipelines/job-templates/job-build-test-package-win-conda.yml
      parameters:
        name: 'MechanicaBuildWindowsConda'
        platform_name: 'win64'
        mx_buildqual: $(mx_buildqual)
        working_dir: $(System.DefaultWorkingDirectory)
        staging_dir: $(Build.ArtifactStagingDirectory)
        mx_version: $(mx_version)
        mx_buildnum: $(mx_buildnum)

  # Linux build: local

  - stage: MechanicaBuildLinuxLocal
    displayName: Local build for Linux
    pool: 
      vmImage: 'ubuntu-20.04'
    dependsOn: []
    - template: .azure-pipelines/job-templates/job-build-test-package-linux-local.yml
      parameters:
        name: 'MechanicaBuildLinuxLocal'
        platform_name: 'linux64'
        mx_buildqual: $(mx_buildqual)
        py_minor_version: $(py_minor_version)
        working_dir: $(System.DefaultWorkingDirectory)
        staging_dir: $(Build.ArtifactStagingDirectory)

  # Linux build: conda

  - stage: MechanicaBuildLinuxConda
    displayName: Conda build for Linux
    pool:
      vmImage: 'ubuntu-20.04'
    dependsOn: []
    - template: .azure-pipelines/job-templates/job-build-test-package-linux-conda.yml
      parameters:
        name: 'MechanicaBuildLinuxConda'
        platform_name: 'linux64'
        mx_buildqual: $(mx_buildqual)
        working_dir: $(System.DefaultWorkingDirectory)
        staging_dir: $(Build.ArtifactStagingDirectory)
        mx_version: $(mx_version)
        mx_buildnum: $(mx_buildnum)

  # MacOS build: local

  - stage: MechanicaBuildMacLocal
    displayName: Local build for Mac
    pool: 
      vmImage: 'macOS-10.11'
    dependsOn: []
    - template: .azure-pipelines/job-templates/job-build-test-package-osx-local.yml
      parameters:
        name: 'MechanicaBuildMacLocal'
        platform_name: 'osx64'
        mx_buildqual: $(mx_buildqual)
        py_minor_version: $(py_minor_version)
        working_dir: $(System.DefaultWorkingDirectory)
        staging_dir: $(Build.ArtifactStagingDirectory)

  # MacOS build: conda

  - stage: MechanicaBuildMacConda
    displayName: Conda build for Mac
    pool:
      vmImage: 'macOS-10.11'
    dependsOn: []
    - template: .azure-pipelines/job-templates/job-build-test-package-osx-conda.yml
      parameters:
        name: 'MechanicaBuildMacConda'
        platform_name: 'osx64'
        mx_buildqual: $(mx_buildqual)
        working_dir: $(System.DefaultWorkingDirectory)
        staging_dir: $(Build.ArtifactStagingDirectory)
        mx_version: $(mx_version)
        mx_buildnum: $(mx_buildnum)
